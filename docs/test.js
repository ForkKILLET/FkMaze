(()=>{var y=Object.defineProperty;var b=(s,t,i)=>t in s?y(s,t,{enumerable:!0,configurable:!0,writable:!0,value:i}):s[t]=i;var m=(s,t)=>()=>(s&&(t=s(s=0)),t);var x=(s,t)=>{for(var i in t)y(s,i,{get:t[i],enumerable:!0})};var o=(s,t,i)=>(b(s,typeof t!="symbol"?t+"":t,i),i);var u,g=m(()=>{u={Math:()=>Object.assign(Math,{parseFraction:(s,t)=>{let i=+t,a,e;for(a=e=t.length;!(i%2);i/=2)a--;for(;!(i%5);i/=5)e--;let r=2**a*5**e;return s[0]==="-"&&(i=-i),i+=s*r,[i,r]},simplifyFraction:(s,t)=>{let i=Math.gcd(s,t);return[s/i,t/i]},gcd:(s,t)=>t?Math.gcd(t,s%t):s,lcm:(s,t,i)=>s*t/(i??Math.gcd(s,t))}),String:()=>Object.assign(String.prototype,{split2(s){let t=this.indexOf(s);return t<0?[this]:[this.slice(0,t),this.slice(t+s.length)]}}),Array:()=>Object.assign(Array.prototype,{repeat(s){let t=[];for(;s--;)t=t.concat(this);return t},randomEntry(){let s=~~(Math.random()*1e6)%this.length;return[s,this[s]]}})}});var w={};x(w,{default:()=>c});var d,c,A=m(()=>{g();u.Array();d=class{constructor(t,i){this.r_max=t,this.c_max=i,this.map=Array(t+2).fill().map((a,e)=>Array(i+2).fill().map((r,l)=>({type:l===0||e===0||l===i+1||e===t+1?d.WALL:e%2+l%2,r:e,c:l})))}neighbor(t,i,a="xy"){return d[`d${a}`].map(([e,r])=>[t+e,i+r]).filter(([e,r])=>e>=1&&e<=this.r_max&&r>=1&&r<=this.c_max).map(([e,r])=>this.map[e][r])}cells(){return this.map.flat()}[Symbol.iterator](){return this.cells().values()}async randomize(t,i,{show_progress:a,fps:e}={}){let r=[],l=({r:h,c:p})=>{this.map[h][p].visited=!0,this.neighbor(h,p).filter(({type:n})=>n===d.BARRIER).forEach(n=>{n.sides=this.neighbor(n.r,n.c,n.r%2?"x":"y"),n.visited=!0,r.push(n)})};for(l({r:t,c:i});r.length;){a&&(a(this),await new Promise(f=>setTimeout(f,1e3/e)));let[h,p]=r.randomEntry(),n=p.sides.find(({visited:f})=>!f);n?(p.type=d.PATH,l(n)):p.visited=!1,r.splice(h,1)}for(let h of this)h.type===d.BARRIER&&(h.type=d.WALL),delete h.visited}draw({canvas:t,zoom:i}){t.width=(this.c_max+2)*i,t.height=(this.r_max+2)*i;let a=t.getContext("2d");for(let{r:e,c:r,type:l,visited:h}of this)a.fillStyle=d.draw_colors[l],a.fillRect(e*i,r*i,i,i),h&&(a.fillStyle="red",a.fillRect((e+.25)*i,(r+.25)*i,.5*i,.5*i))}},c=d;o(c,"WALL",0),o(c,"BARRIER",1),o(c,"PATH",2),o(c,"print_chars","#X "),o(c,"draw_colors",["black","blue","transparent"]),o(c,"dx",[[0,-1],[0,1]]),o(c,"dy",[[-1,0],[1,0]]),o(c,"dxy",[...d.dx,...d.dy])});(async()=>{let{default:s}=await Promise.resolve().then(()=>(A(),w)),t=new s(25,25),i=document.createElement("canvas");document.body.appendChild(i);let a=()=>t.draw({canvas:i,zoom:15});await t.randomize(1,1,{show_progress:a,fps:40}),a(),Object.assign(window,{Maze:s,maze:t})})();})();
//# sourceMappingURL=test.js.map
